---
name: cmpsc-203-spring-2019-practical7
break: true
indent: 4
---
# --> check the source code for various characteristics
# note that without an "--exact" the check is an "at least"
termfrequency:
        compute_tf_aspects.py:
            --fragment "if __name__ ==" --count 1
            --fragment "TODO" --count 0
tests:
        test_compute_tf_aspects.py:
            --fragment "from termfrequency import compute_tf_aspects" --count 1
            --fragment "test_" --count 5
            --fragment "TODO" --count 0
# --> check the technical writing
# mdl is a Markdown linting tool
# proselint checks writing for common mistakes
writing/reflection.md:
    mdl
    proselint
    --paragraphs 5 --exact
    --words 100
# --> check the number of commits beyond a threshold
--commits 23
# --> check that the program executes and produces 11 lines of output
--command "pipenv run python3 termfrequency/compute_tf_aspects.py inputs/input.txt" --executes
--command "pipenv run python3 termfrequency/compute_tf_aspects.py inputs/input.txt" --count 11 --exact
--command "pipenv run python3 termfrequency/compute_tf_aspects.py inputs/input.txt" --fragment "took" --count 3 --exact
# --> check that the test suite executes and does not fail
--command "pipenv run pytest" --executes
--command "pipenv run pytest -x -s --cov-config pytest.cov --cov-report term-missing --cov" --executes
